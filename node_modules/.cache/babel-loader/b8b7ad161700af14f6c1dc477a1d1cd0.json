{"ast":null,"code":"var _jsxFileName = \"/Users/henry/Desktop/GitHub/todoList-1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; //importing components\n\nimport Form from \"./components/Form.js\";\nimport TodoList from \"./components/TodoList.js\"; // main function\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // defines a variable, and its *setter*\n  // use the setter to set the variable lol im only 12 please\n  const [inputText, setInputText] = useState(\"\"); // input text bar\n\n  const [todos, setTodos] = useState([]); // list of todos (entered)\n  // current dropdown status [all, completed, uncompleted]\n\n  const [status, setStatus] = useState(\"all\"); // current list to load (depends on status)\n\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const filterHandler = () => {\n    // change list to load from status change\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n\n      case \"all\":\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  useEffect(() => {\n    // this will run one time, when the app starts\n    getLocalTodos();\n  }, []);\n  useEffect(() => {\n    // anytime todos OR status state changes, runs filterHandler()\n    filterHandler();\n    saveLocalTodos(); // also want to save each time\n  }, [todos, status]); // store todos locally (push todos to 'storedTodos')\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('storedTodos', JSON.stringify(todos));\n  }; // retrieve todos from local\n\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      setTodos(JSON.parse(localStorage.getItem('storedTodos')));\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // main\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Todo List.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        todos: todos,\n        setTodos: setTodos,\n        setInputText: setInputText,\n        inputText: inputText,\n        status: status,\n        setStatus: setStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        filteredTodos: filteredTodos,\n        setTodos: setTodos,\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"JotSR43hDoC1aURWXAcTACk0abg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/henry/Desktop/GitHub/todoList-1/src/App.js"],"names":["React","useState","useEffect","Form","TodoList","App","inputText","setInputText","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","filterHandler","filter","todo","completed","getLocalTodos","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","parse"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,WAAP,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB,C,CAEA;;;;AACA,SAASC,GAAT,GAAc;AAAA;;AAEZ;AACA;AAEA,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,EAAD,CAAzC,CALY,CAKsC;;AAClD,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CANY,CAMsC;AAElD;;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC,CATY,CAUZ;;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMa,aAAa,GAAG,MAAM;AAAI;AAC9B,YAAOJ,MAAP;AACE,WAAK,WAAL;AACEG,QAAAA,gBAAgB,CAACL,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,IAAxC,CAAD,CAAhB;AACA;;AACF,WAAK,aAAL;AACEJ,QAAAA,gBAAgB,CAACL,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,KAAxC,CAAD,CAAhB;AACA;;AACF,WAAK,KAAL;AACEJ,QAAAA,gBAAgB,CAACL,KAAD,CAAhB;AACA;AATJ;AAWD,GAZD;;AAcAN,EAAAA,SAAS,CAAC,MAAI;AAAI;AAChBgB,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,MAAI;AAAI;AAChBY,IAAAA,aAAa;AACbK,IAAAA,cAAc,GAFF,CAEQ;AACrB,GAHQ,EAGN,CAACX,KAAD,EAAQE,MAAR,CAHM,CAAT,CA/BY,CAoCZ;;AACA,QAAMS,cAAc,GAAG,MAAM;AAC3BC,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAef,KAAf,CAApC;AACD,GAFD,CArCY,CAwCZ;;;AACA,QAAMU,aAAa,GAAG,MAAM;AAC1B,QAAIE,YAAY,CAACI,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA2C;AACzCJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA9B;AACD,KAFD,MAEK;AACHd,MAAAA,QAAQ,CAACa,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACI,OAAb,CAAqB,aAArB,CAAX,CAAD,CAAR;AACD;AACF,GAND;;AAQA;AAAA;AAAkB;AAChB;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BAEE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,IAAD;AACE,QAAA,KAAK,EAAEhB,KADT;AAEE,QAAA,QAAQ,EAAEC,QAFZ;AAGE,QAAA,YAAY,EAAEF,YAHhB;AAIE,QAAA,SAAS,EAAED,SAJb;AAKE,QAAA,MAAM,EAAEI,MALV;AAME,QAAA,SAAS,EAAEC;AANb;AAAA;AAAA;AAAA;AAAA,cANF,eAcE,QAAC,QAAD;AACE,QAAA,aAAa,EAAEC,aADjB;AAEE,QAAA,QAAQ,EAAEH,QAFZ;AAGE,QAAA,KAAK,EAAED;AAHT;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAuBD;;GAxEQH,G;;KAAAA,G;AAyET,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./App.css\";\n\n//importing components\nimport Form from \"./components/Form.js\"\nimport TodoList from \"./components/TodoList.js\"\n\n// main function\nfunction App(){\n \n  // defines a variable, and its *setter*\n  // use the setter to set the variable lol im only 12 please\n\n  const [inputText,setInputText] = useState(\"\");    // input text bar\n  const [todos, setTodos] = useState([]);           // list of todos (entered)\n\n  // current dropdown status [all, completed, uncompleted]\n  const [status, setStatus] = useState(\"all\");\n  // current list to load (depends on status)\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const filterHandler = () => {   // change list to load from status change\n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      case \"all\":\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  useEffect(()=>{   // this will run one time, when the app starts\n    getLocalTodos();  \n  }, []);\n\n  useEffect(()=>{   // anytime todos OR status state changes, runs filterHandler()\n    filterHandler();\n    saveLocalTodos();   // also want to save each time\n  }, [todos, status]);\n\n  // store todos locally (push todos to 'storedTodos')\n  const saveLocalTodos = () => {\n    localStorage.setItem('storedTodos', JSON.stringify(todos));\n  }\n  // retrieve todos from local\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]));\n    }else{\n      setTodos(JSON.parse(localStorage.getItem('storedTodos')));\n    }\n  }\n\n  return(           // main\n    <div className=\"App\">\n\n      <header> \n        <h1>Todo List.</h1>\n      </header>\n\n      <Form \n        todos={todos} \n        setTodos={setTodos} \n        setInputText={setInputText} \n        inputText={inputText}\n        status={status}\n        setStatus={setStatus}\n      />\n      <TodoList \n        filteredTodos={filteredTodos}\n        setTodos={setTodos} \n        todos={todos}\n      />\n\n    </div>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}