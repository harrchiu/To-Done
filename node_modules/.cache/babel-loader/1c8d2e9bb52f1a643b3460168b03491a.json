{"ast":null,"code":"import _slicedToArray from\"/Users/henry/Desktop/GitHub/todoList-1/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./App.css\";//importing components\nimport Form from\"./components/Form.js\";import TodoList from\"./components/TodoList.js\";// main function\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// defines a variable, and its *setter*\n// use the setter to set the variable lol im only 12 please\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];// input text bar\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),todos=_useState4[0],setTodos=_useState4[1];// list of todos (entered)\n// current dropdown status [all, completed, uncompleted]\nvar _useState5=useState(\"all\"),_useState6=_slicedToArray(_useState5,2),status=_useState6[0],setStatus=_useState6[1];// current list to load (depends on status)\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),filteredTodos=_useState8[0],setFilteredTodos=_useState8[1];var filterHandler=function filterHandler(){// change list to load from status change\nswitch(status){case\"completed\":setFilteredTodos(todos.filter(function(todo){return todo.completed===true;}));break;case\"uncompleted\":setFilteredTodos(todos.filter(function(todo){return todo.completed===false;}));break;case\"all\":setFilteredTodos(todos);break;}};useEffect(function(){// this will run one time, when the app starts\ngetLocalTodos();},[]);useEffect(function(){// anytime todos OR status state changes, runs filterHandler()\nfilterHandler();saveLocalTodos();// also want to save each time\n},[todos,status]);// store todos locally (push todos to 'storedTodos')\nvar saveLocalTodos=function saveLocalTodos(){localStorage.setItem('storedTodos',JSON.stringify(todos));};// retrieve todos from local\nvar getLocalTodos=function getLocalTodos(){// can't read if refreshing null, so skip\nif(localStorage.getItem('todos')===null){localStorage.setItem('todos',JSON.stringify([]));}else{// otherwise normal load\nsetTodos(JSON.parse(localStorage.getItem('storedTodos')));}};return/*#__PURE__*/ (// main\n_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Todo List.\"})}),/*#__PURE__*/_jsx(Form,{todos:todos,setTodos:setTodos,setInputText:setInputText,inputText:inputText,status:status,setStatus:setStatus}),/*#__PURE__*/_jsx(TodoList,{filteredTodos:filteredTodos,setTodos:setTodos,todos:todos})]}));}export default App;","map":{"version":3,"sources":["/Users/henry/Desktop/GitHub/todoList-1/src/App.js"],"names":["React","useState","useEffect","Form","TodoList","App","inputText","setInputText","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","filterHandler","filter","todo","completed","getLocalTodos","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","parse"],"mappings":"yHAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAO,WAAP,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CAEA;wFACA,QAASC,CAAAA,GAAT,EAAc,CAEZ;AACA;AAHY,cAKqBJ,QAAQ,CAAC,EAAD,CAL7B,wCAKLK,SALK,eAKKC,YALL,eAKsC;AALtC,eAMcN,QAAQ,CAAC,EAAD,CANtB,yCAMLO,KANK,eAMEC,QANF,eAMsC;AAElD;AARY,eASgBR,QAAQ,CAAC,KAAD,CATxB,yCASLS,MATK,eASGC,SATH,eAUZ;AAVY,eAW8BV,QAAQ,CAAC,EAAD,CAXtC,yCAWLW,aAXK,eAWUC,gBAXV,eAaZ,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAAI;AAC9B,OAAOJ,MAAP,EACE,IAAK,WAAL,CACEG,gBAAgB,CAACL,KAAK,CAACO,MAAN,CAAa,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,SAAL,GAAmB,IAAvB,EAAjB,CAAD,CAAhB,CACA,MACF,IAAK,aAAL,CACEJ,gBAAgB,CAACL,KAAK,CAACO,MAAN,CAAa,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,SAAL,GAAmB,KAAvB,EAAjB,CAAD,CAAhB,CACA,MACF,IAAK,KAAL,CACEJ,gBAAgB,CAACL,KAAD,CAAhB,CACA,MATJ,CAWD,CAZD,CAcAN,SAAS,CAAC,UAAI,CAAI;AAChBgB,aAAa,GACd,CAFQ,CAEN,EAFM,CAAT,CAIAhB,SAAS,CAAC,UAAI,CAAI;AAChBY,aAAa,GACbK,cAAc,GAAM;AACrB,CAHQ,CAGN,CAACX,KAAD,CAAQE,MAAR,CAHM,CAAT,CAKA;AACA,GAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoCC,IAAI,CAACC,SAAL,CAAef,KAAf,CAApC,EACD,CAFD,CAGA;AACA,GAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B;AACA,GAAIE,YAAY,CAACI,OAAb,CAAqB,OAArB,IAAkC,IAAtC,CAA2C,CACzCJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA9B,EACD,CAFD,IAEO,CAAG;AACRd,QAAQ,CAACa,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACI,OAAb,CAAqB,aAArB,CAAX,CAAD,CAAR,CACD,CACF,CAPD,CASA,oBAAkB;AAChB,aAAK,SAAS,CAAC,KAAf,wBAEE,qCACE,kCADF,EAFF,cAME,KAAC,IAAD,EACE,KAAK,CAAEhB,KADT,CAEE,QAAQ,CAAEC,QAFZ,CAGE,YAAY,CAAEF,YAHhB,CAIE,SAAS,CAAED,SAJb,CAKE,MAAM,CAAEI,MALV,CAME,SAAS,CAAEC,SANb,EANF,cAeE,KAAC,QAAD,EACE,aAAa,CAAEC,aADjB,CAEE,QAAQ,CAAEH,QAFZ,CAGE,KAAK,CAAED,KAHT,EAfF,GADF,EAwBD,CACD,cAAeH,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./App.css\";\n\n//importing components\nimport Form from \"./components/Form.js\"\nimport TodoList from \"./components/TodoList.js\"\n\n// main function\nfunction App(){\n \n  // defines a variable, and its *setter*\n  // use the setter to set the variable lol im only 12 please\n\n  const [inputText,setInputText] = useState(\"\");    // input text bar\n  const [todos, setTodos] = useState([]);           // list of todos (entered)\n\n  // current dropdown status [all, completed, uncompleted]\n  const [status, setStatus] = useState(\"all\");\n  // current list to load (depends on status)\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const filterHandler = () => {   // change list to load from status change\n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      case \"all\":\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  useEffect(()=>{   // this will run one time, when the app starts\n    getLocalTodos();  \n  }, []);\n\n  useEffect(()=>{   // anytime todos OR status state changes, runs filterHandler()\n    filterHandler();\n    saveLocalTodos();   // also want to save each time\n  }, [todos, status]);\n\n  // store todos locally (push todos to 'storedTodos')\n  const saveLocalTodos = () => {\n    localStorage.setItem('storedTodos', JSON.stringify(todos));\n  };\n  // retrieve todos from local\n  const getLocalTodos = () => {\n    // can't read if refreshing null, so skip\n    if (localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]) );\n    } else {  // otherwise normal load\n      setTodos(JSON.parse(localStorage.getItem('storedTodos')));\n    }\n  };\n\n  return(           // main\n    <div className=\"App\">\n\n      <header> \n        <h1>Todo List.</h1>\n      </header>\n\n      <Form \n        todos={todos} \n        setTodos={setTodos} \n        setInputText={setInputText} \n        inputText={inputText}\n        status={status}\n        setStatus={setStatus}\n      />\n\n      <TodoList \n        filteredTodos={filteredTodos}\n        setTodos={setTodos} \n        todos={todos}\n      />\n\n    </div>\n  )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}