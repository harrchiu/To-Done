[{"/Users/henry/Desktop/GitHub/todoList-1/src/index.js":"1","/Users/henry/Desktop/GitHub/todoList-1/src/App.js":"2","/Users/henry/Desktop/GitHub/todoList-1/src/components/Form.js":"3","/Users/henry/Desktop/GitHub/todoList-1/src/components/TodoList.js":"4","/Users/henry/Desktop/GitHub/todoList-1/src/components/Todo.js":"5"},{"size":159,"mtime":1615361748043,"results":"6","hashOfConfig":"7"},{"size":2321,"mtime":1615363672462,"results":"8","hashOfConfig":"7"},{"size":1508,"mtime":1615363949067,"results":"9","hashOfConfig":"7"},{"size":514,"mtime":1615364190217,"results":"10","hashOfConfig":"7"},{"size":1008,"mtime":1615363723923,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ton42m",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/henry/Desktop/GitHub/todoList-1/src/index.js",[],["24","25"],"/Users/henry/Desktop/GitHub/todoList-1/src/App.js",["26","27"],"import React, {useState, useEffect} from \"react\";\nimport \"./App.css\";\n\n//importing components\nimport Form from \"./components/Form.js\"\nimport TodoList from \"./components/TodoList.js\"\n\n// main function\nfunction App(){\n \n  // defines a variable, and its *setter*\n  // use the setter to set the variable lol im only 12 please\n\n  const [inputText,setInputText] = useState(\"\");    // input text bar\n  const [todos, setTodos] = useState([]);           // list of todos (entered)\n\n  // current dropdown status [all, completed, uncompleted]\n  const [status, setStatus] = useState(\"all\");\n  // current list to load (depends on status)\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const filterHandler = () => {   // change list to load from status change\n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      case \"all\":\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  useEffect(()=>{   // this will run one time, when the app starts\n    getLocalTodos();  \n  }, []);\n\n  useEffect(()=>{   // anytime todos OR status state changes, runs filterHandler()\n    filterHandler();\n    saveLocalTodos();   // also want to save each time\n  }, [todos, status]);\n\n  // store todos locally (push todos to 'storedTodos')\n  const saveLocalTodos = () => {\n    localStorage.setItem('storedTodos', JSON.stringify(todos));\n  };\n  // retrieve todos from local\n  const getLocalTodos = () => {\n    // can't read if refreshing null, so skip\n    if (localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]) );\n    } else {  // otherwise normal load\n      setTodos(JSON.parse(localStorage.getItem('storedTodos')));\n    }\n  };\n\n  return(           // main\n    <div className=\"App\">\n\n      <header> \n        <h1>Todo List.</h1>\n      </header>\n\n      <Form \n        todos={todos} \n        setTodos={setTodos} \n        setInputText={setInputText} \n        inputText={inputText}\n        status={status}\n        setStatus={setStatus}\n      />\n\n      <TodoList \n        filteredTodos={filteredTodos}\n        setTodos={setTodos} \n        todos={todos}\n      />\n\n    </div>\n  )\n}\nexport default App;","/Users/henry/Desktop/GitHub/todoList-1/src/components/Form.js",[],"/Users/henry/Desktop/GitHub/todoList-1/src/components/TodoList.js",[],"/Users/henry/Desktop/GitHub/todoList-1/src/components/Todo.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":23,"column":5,"nodeType":"34","messageId":"35","endLine":33,"endColumn":6},{"ruleId":"36","severity":1,"message":"37","line":43,"column":6,"nodeType":"38","endLine":43,"endColumn":21,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"45","text":"46"},[1349,1364],"[todos, status, filterHandler, saveLocalTodos]"]